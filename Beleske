**************************************************************************************************
Ovde se nalaze beleske za bagove koje sam pronalazio i ispravljao:

1) Bag sa gubljenjem konekcije sa web socketom.

didCloseWithCode 1001, reason: Optional("Stream end encountered")
"Socket disconected"

Ovo je bio bag sa gubljenjm konekcje sa web socketom, kada se desavalo da se web socket sam od sebe diskonektuje odjednom, bez ikakvog razloga posle 1-2 minuta.

Resenje je bilo da se u metodi koja se pozove da bi prekinula konekciju:

// Disconnection method
    func stompClientDidDisconnect(client: StompClientLib!) {
        debugPrint("Socket disconected")
        socketClient.unsubscribeFromAllTopics()
        socketClient.openSocketWithURLRequest(request: NSURLRequest(url: Constants.webSocketURL),
                                                delegate: self)
    }
    
Ubaci se deo koda:

socketClient.openSocketWithURLRequest(request: NSURLRequest(url: Constants.webSocketURL),
                                                delegate: self)
                                            
koji ponovo uspostavi konekciju sa web socektima sam za sve i klijent i drajvera.
**************************************************************************************************
Primeri za enume koji su zamenili if - else petlju:


import UIKit

enum ReportImageView: String {
    case topImage
    case bottomImage
}

class NewReportViewController: UIViewController {

    // MARK: - Properties
    lazy var imagePicker = UIImagePickerController()
    var topImage = false
    var bottomImage = false
    var windowPosition: ReportImageView! = ReportImageView(rawValue: "")      <--- Ovo sam morao ovako da raspakujem da bi program radio

    var presenter: NewReportPresenter!
    var newReportView: NewReportView! {
        loadViewIfNeeded()
        return view as? NewReportView
    }

    override func viewDidLoad() {
        super.viewDidLoad()
————————————————————————————————————————

   @objc private func fishButtonTapped(recognizer: UITapGestureRecognizer) {
        debugPrint("Fish button tapped")
//            topImage = true
//            bottomImage = false
            windowPosition = .topImage
            actionSheetHandler()
    }

    @objc private func manButtonTapped(recognizer: UITapGestureRecognizer) {
        debugPrint("Man button tapped")
//            bottomImage = true
//            topImage = false
            windowPosition = .bottomImage
            actionSheetHandler()
    }

------------------------------------------------------------------------------------
          let image = resizeImage(image: chosenImage, targetSize: CGSize(width: 100, height: 100))

//            let windowPosition: ReportImageView! = ReportImageView(rawValue: "")

            switch windowPosition {
            case .topImage?:
                self.newReportView.newCatchRollerImageView.image = image
                newReportView.fishButton.isHidden = false
                newReportView.uploadPhotoTopImageView.isHidden = true
                newReportView.uploadPhotoLabelTop.isHidden = true
            case .bottomImage?:
                self.newReportView.newCatchManImageView.image = image
                newReportView.manButton.isHidden = false
                newReportView.uploadPhotoBottomImageView.isHidden = true
                newReportView.uploadPhotoLabelBottom.isHidden = true
            default: break
            }

//            if  topImage {
//                self.newReportView.newCatchRollerImageView.image = image
//                newReportView.fishButton.isHidden = false
//                newReportView.uploadPhotoTopImageView.isHidden = true
//                newReportView.uploadPhotoLabelTop.isHidden = true
//            } else if bottomImage {
//                self.newReportView.newCatchManImageView.image = image
//                newReportView.manButton.isHidden = false
//                newReportView.uploadPhotoBottomImageView.isHidden = true
//                newReportView.uploadPhotoLabelBottom.isHidden = true
//            }

**************************************************************************************************
Unwrapping of Optionals:

1. Nacin - nisam sigaran jel ispravan
// iconImageView.image = UIImage(named: presenter.tutorialModel.tutorialIconImage ?? "")

2. Nacin - mislim da je ovaj ispravan i tako sam i uradio
 if let image = presenter.tutorialModel.tutorialIconImage {
            iconImageView.image = UIImage(named: image)
        }




//        if image = UIImage(named: presenter.tutorialModel.tutorialImage) {
//            contentImageView.image = image
//        }
**************************************************************************************************
Kada hocu da dobro ubacim sliku da se upasuje dobro da ne viri okolo a da ne bude razvucena:

 profileBackgroundImageView.contentMode = .scaleAspectFill
 profileBackgroundImageView.clipsToBounds = true
        
***************************************************************************************************
 Kada hocu da mi se otvori tastatura na simulatoru, pri kliku na text field, treba kada se ukljuci
 simulator da idem gore na sledece opcije:
 
 Hardvare -> Keyboard ->Toggle Software Keyboard 
 
 i tada treba da stikliram opciju Toggle Software Keyboard ukoliko nije stiklirana.
*****************************************************************************************************
Ovo je bug sa Terms & Conditins ekranom za iPhone SE, kada stranica nece da se ucita od vrha ekrana.
 
Resenje je bilo:
  Da u ViewController-u koji drzi taj UITextView @IBOutlet, dodam sledecu metodu:
  
   override func viewDidLayoutSubviews() {
        textView.setContentOffset(.zero, animated: false)
    }
  
Ovo sam resio na Fleaty-ju u klasi: TermsAndPrivacyViewController.swift
 
 
Resenje sam nasao na linku:
 
 https://stackoverflow.com/questions/1234242/how-do-i-force-a-uitextview-to-scroll-to-the-top-every-time-i-change-the-text
 
*****************************************************************************************************
 Primer funkcije kojom se setuje spustanje tastature simulatora kada se klikne van TextView polja 
 kada sam zavrsio sa unosom zeljenih podataka/teksta:
 
1) Prvo, u metodu viewDidLoad() unesem sledecu liniju koda:
 
 self.view.addGestureRecognizer(UITapGestureRecognizer(target: self, action: #selector(dismissKeyboard)))
 
 tako sam dodao GestureRecognizer koji ce prepoznati da sam kliknuo na ekran.
 
 2) Drugo, pravim metodu koja ce mi koristiti za dismissovanje tatature klikom na ekran telefona.
 
  //MARK: - Metoda za dismissovanje tastature od simulatora tako sto se klikne van tekst polja na ekranu.
    @objc func dismissKeyboard() {
        inputTextField.resignFirstResponder()
    }
 3) Trece, ovo je metoda koja ce mi omoguciti dismissovanje ekrana klikom na dugme "Return" na tastaturi telefona.
 
 
 
 
 
 
