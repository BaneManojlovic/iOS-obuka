-----------------------------------------------------------------------------------------
Ovde se nalaze primeri kodova za razlicite slucajeve.
----------------------------------------------------------
1) Custimizovanje izgleda dugmeta vrsi se u ViewControler klasi unutar metode viewDidLoad() ispod super.viewDidLoad() poziva

        hitMeButton.layer.cornerRadius = 4
        hitMeButton.layer.borderColor = UIColor.black.cgColor
        hitMeButton.layer.borderWidth = 1
        hitMeButton.setTitle("Cao Bane", for: .normal)
        hitMeButton.setTitleColor(.purple, for: .normal)
        hitMeButton.setTitleColor(.green, for: .highlighted)
        hitMeButton.contentEdgeInsets = UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 5) . /ovako se setuje margina oko teksta unutar dugmeta
        hitMeButton.backgroundColor = UIColor.gray
        
  Takodje, pre toga je potrebno deklarisati dato dugme odmah u ViiewContolrer klasi, ovako:
  
  @IBOutlet weak var hitMeButton: UIButton!
  
  
----------------------------------------------------------  
2) Metoda za prikaz Alert poruke pri kliku na dugme

//method for showing alert pop-up
    @IBAction func showAlert() {
        let alert = UIAlertController(title: "Hello, World",
                                      message: "This is my first app!",
                                      preferredStyle: .alert)
        let action = UIAlertAction(title: "Awesome", style: .default,
                                   handler: nil)
        alert.addAction(action)
        present(alert, animated: true, completion: nil)
    }

----------------------------------------------------------
3) Za generisanje random broja:

        targetValue = Int.random(in: 1...100)
        
   Pre nego sto se ono gore pozove, moramo da deklarisemo varijablu:
        var targetValue = 0
   ali ovo nije uvek neophodno.
   Takodje nekada zavisno od vrste Xcode-a i verzije iOS-a umesto gornje komande trebamo upotrebiti ovu:
   
        targetValue = Int(arc4random_uniform(100)) + 1
        
   Rezultat je isti, samo sto kompajler u starijim verzijama Xcode-a nema random() metodu.
   
----------------------------------------------------------
4) Za prikazivanje vrednosti u labelama:

        func updateLabels() {
                targetLabel.text = String(targetValue)
        }


----------------------------------------------------------
5) Primer jedne if petlje

        var difference: Int
        if currentValue > targetValue {
            difference = currentValue - targetValue
        } else if targetValue > currentValue {
            difference = targetValue - currentValue
        } else {
            difference = 0
        }
 
 ----------------------------------------------------------
 6) Metoda za implementiranje swipe-to-delete funkcionalnosti na TableView listi
 
    override func tableView(_ tableView: UITableView,
                            commit editingStyle: UITableViewCell.EditingStyle,
                            forRowAt indexPath: IndexPath) {
        items.remove(at: indexPath.row)
        let indexPaths = [indexPath]
        tableView.deleteRows(at: indexPaths, with: .automatic)
    }
 
 -----------------------------------------------------------      
1. Nacin - Setovanje footera u TableView-u, (da bude floating button):


    func tableView(_ tableView: UITableView, viewForFooterInSection section: Int) -> UIView? {
        let footer = ImageTitleButton()
        footer.contentHorizontalAlignment = .center
        footer.addTarget(self, action: #selector(addVehicle), for: .touchUpInside)
        footer.setTitle("+ " + L10n.buttonTitleAddVehicle, for: .normal)
        return footer
    }

Ova metoda se stalja u ekstenziju gde mi je UITableViewDelegate (npr: extension VehiclesViewController: UITableViewDelegate)

2. Nacin - Setovanje footer-a u TableView-u (da ne bude floating button, vec da se spusta/skroluje zajedno sa tabelom na ekranu):

func setupFooterButton() {
        let customView = UIView(frame: CGRect(x: 0, y: 0, width: 200, height: 50))
        let button = UIButton(frame: CGRect(x: 0, y: 0, width: 150, height: 50))
        button.setTitleColor(.black, for: .normal)
        button.center.x = self.view.center.x
        button.addTarget(self, action: #selector(addVehicle), for: .touchUpInside)
        button.setTitle("+ " + L10n.buttonTitleAddVehicle, for: .normal)
        customView.addSubview(button)
        self.tableView.tableFooterView = customView
    }
    
  Ovu funkciju treba pozvati u ViewDidLoad() metodi.
  
  

